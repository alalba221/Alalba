//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30794723
// Cuda compilation tools, release 11.6, V11.6.55
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_52
.address_size 64

	// .globl	__closesthit__radiance
.extern .const .align 8 .b8 optixLaunchParams[72];

.visible .entry __closesthit__radiance()
{
	.reg .f32 	%f<46>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<15>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	ld.u64 	%rd2, [%rd1+24];
	mul.wide.s32 	%rd3, %r1, 12;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u32 	%r6, [%rd4];
	ld.u32 	%r7, [%rd4+4];
	ld.u32 	%r8, [%rd4+8];
	ld.u64 	%rd5, [%rd1+16];
	mul.wide.s32 	%rd6, %r6, 12;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.s32 	%rd8, %r7, 12;
	add.s64 	%rd9, %rd5, %rd8;
	mul.wide.s32 	%rd10, %r8, 12;
	add.s64 	%rd11, %rd5, %rd10;
	ld.f32 	%f4, [%rd9];
	ld.f32 	%f5, [%rd7];
	sub.ftz.f32 	%f6, %f4, %f5;
	ld.f32 	%f7, [%rd9+4];
	ld.f32 	%f8, [%rd7+4];
	sub.ftz.f32 	%f9, %f7, %f8;
	ld.f32 	%f10, [%rd9+8];
	ld.f32 	%f11, [%rd7+8];
	sub.ftz.f32 	%f12, %f10, %f11;
	ld.f32 	%f13, [%rd11];
	sub.ftz.f32 	%f14, %f13, %f5;
	ld.f32 	%f15, [%rd11+4];
	sub.ftz.f32 	%f16, %f15, %f8;
	ld.f32 	%f17, [%rd11+8];
	sub.ftz.f32 	%f18, %f17, %f11;
	mul.ftz.f32 	%f19, %f9, %f18;
	mul.ftz.f32 	%f20, %f12, %f16;
	sub.ftz.f32 	%f21, %f19, %f20;
	mul.ftz.f32 	%f22, %f12, %f14;
	mul.ftz.f32 	%f23, %f6, %f18;
	sub.ftz.f32 	%f24, %f22, %f23;
	mul.ftz.f32 	%f25, %f6, %f16;
	mul.ftz.f32 	%f26, %f9, %f14;
	sub.ftz.f32 	%f27, %f25, %f26;
	mul.ftz.f32 	%f28, %f24, %f24;
	fma.rn.ftz.f32 	%f29, %f21, %f21, %f28;
	fma.rn.ftz.f32 	%f30, %f27, %f27, %f29;
	sqrt.approx.ftz.f32 	%f31, %f30;
	div.approx.ftz.f32 	%f32, %f21, %f31;
	div.approx.ftz.f32 	%f33, %f24, %f31;
	div.approx.ftz.f32 	%f34, %f27, %f31;
	// begin inline asm
	call (%f1), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f2), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f3), _optix_get_world_ray_direction_z, ();
	// end inline asm
	mul.ftz.f32 	%f35, %f33, %f2;
	fma.rn.ftz.f32 	%f36, %f32, %f1, %f35;
	fma.rn.ftz.f32 	%f37, %f34, %f3, %f36;
	abs.ftz.f32 	%f38, %f37;
	fma.rn.ftz.f32 	%f39, %f38, 0f3F4CCCCD, 0f3E4CCCCD;
	mov.u32 	%r3, 0;
	// begin inline asm
	call (%r2), _optix_get_payload, (%r3);
	// end inline asm
	mov.u32 	%r5, 1;
	// begin inline asm
	call (%r4), _optix_get_payload, (%r5);
	// end inline asm
	cvt.u64.u32 	%rd12, %r2;
	cvt.u64.u32 	%rd13, %r4;
	bfi.b64 	%rd14, %rd12, %rd13, 32, 32;
	ld.f32 	%f40, [%rd1];
	mul.ftz.f32 	%f41, %f39, %f40;
	ld.f32 	%f42, [%rd1+4];
	mul.ftz.f32 	%f43, %f39, %f42;
	ld.f32 	%f44, [%rd1+8];
	mul.ftz.f32 	%f45, %f39, %f44;
	st.f32 	[%rd14], %f41;
	st.f32 	[%rd14+4], %f43;
	st.f32 	[%rd14+8], %f45;
	ret;

}
	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance()
{



	ret;

}
	// .globl	__miss__radiance
.visible .entry __miss__radiance()
{
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<4>;


	mov.u32 	%r2, 0;
	// begin inline asm
	call (%r1), _optix_get_payload, (%r2);
	// end inline asm
	mov.u32 	%r4, 1;
	// begin inline asm
	call (%r3), _optix_get_payload, (%r4);
	// end inline asm
	cvt.u64.u32 	%rd1, %r1;
	cvt.u64.u32 	%rd2, %r3;
	bfi.b64 	%rd3, %rd1, %rd2, 32, 32;
	mov.u32 	%r5, 1065353216;
	st.u32 	[%rd3], %r5;
	st.u32 	[%rd3+4], %r5;
	st.u32 	[%rd3+8], %r5;
	ret;

}
	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame()
{
	.local .align 4 .b8 	__local_depot3[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<57>;
	.reg .b32 	%r<121>;
	.reg .b64 	%rd<9>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	// begin inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// end inline asm
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r44, 0;
	st.local.u32 	[%rd3], %r44;
	st.local.u32 	[%rd3+4], %r44;
	st.local.u32 	[%rd3+8], %r44;
	shr.u64 	%rd4, %rd2, 32;
	cvt.u32.u64 	%r46, %rd4;
	cvt.u32.u64 	%r47, %rd2;
	cvt.rn.f32.s32 	%f10, %r1;
	add.ftz.f32 	%f11, %f10, 0f3F000000;
	cvt.rn.f32.s32 	%f12, %r5;
	add.ftz.f32 	%f13, %f12, 0f3F000000;
	ld.const.v2.u32 	{%r78, %r79}, [optixLaunchParams+8];
	mov.u32 	%r43, 1;
	cvt.rn.f32.s32 	%f14, %r78;
	cvt.rn.f32.s32 	%f15, %r79;
	div.approx.ftz.f32 	%f16, %f11, %f14;
	div.approx.ftz.f32 	%f17, %f13, %f15;
	add.ftz.f32 	%f18, %f16, 0fBF000000;
	ld.const.v2.f32 	{%f19, %f20}, [optixLaunchParams+40];
	ld.const.v2.f32 	{%f23, %f24}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f27, %f28}, [optixLaunchParams+24];
	fma.rn.ftz.f32 	%f30, %f18, %f19, %f28;
	ld.const.v2.f32 	{%f31, %f32}, [optixLaunchParams+32];
	fma.rn.ftz.f32 	%f35, %f18, %f20, %f31;
	fma.rn.ftz.f32 	%f36, %f18, %f23, %f32;
	add.ftz.f32 	%f37, %f17, 0fBF000000;
	ld.const.v2.f32 	{%f38, %f39}, [optixLaunchParams+56];
	fma.rn.ftz.f32 	%f42, %f37, %f24, %f30;
	fma.rn.ftz.f32 	%f43, %f37, %f38, %f35;
	fma.rn.ftz.f32 	%f44, %f37, %f39, %f36;
	mul.ftz.f32 	%f45, %f43, %f43;
	fma.rn.ftz.f32 	%f46, %f42, %f42, %f45;
	fma.rn.ftz.f32 	%f47, %f44, %f44, %f46;
	sqrt.approx.ftz.f32 	%f48, %f47;
	div.approx.ftz.f32 	%f4, %f42, %f48;
	div.approx.ftz.f32 	%f5, %f43, %f48;
	div.approx.ftz.f32 	%f6, %f44, %f48;
	ld.const.u64 	%rd1, [optixLaunchParams+64];
	ld.const.v2.f32 	{%f49, %f50}, [optixLaunchParams+16];
	mov.f32 	%f8, 0f60AD78EC;
	mov.u32 	%r40, 255;
	mov.u32 	%r45, 2;
	// begin inline asm
	call(%r7,%r8,%r9,%r10,%r11,%r12,%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38),_optix_trace_typed_32,(%r44,%rd1,%f49,%f50,%f27,%f4,%f5,%f6,%f9,%f8,%f9,%r40,%r43,%r44,%r43,%r44,%r45,%r46,%r47,%r82,%r83,%r84,%r85,%r86,%r87,%r88,%r89,%r90,%r91,%r92,%r93,%r94,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109,%r110,%r111);
	// end inline asm
	ld.local.f32 	%f51, [%rd3];
	mul.ftz.f32 	%f52, %f51, 0f437FFD71;
	cvt.rzi.ftz.s32.f32 	%r112, %f52;
	ld.local.f32 	%f53, [%rd3+4];
	mul.ftz.f32 	%f54, %f53, 0f437FFD71;
	cvt.rzi.ftz.s32.f32 	%r113, %f54;
	ld.local.f32 	%f55, [%rd3+8];
	mul.ftz.f32 	%f56, %f55, 0f437FFD71;
	cvt.rzi.ftz.s32.f32 	%r114, %f56;
	shl.b32 	%r115, %r113, 8;
	shl.b32 	%r116, %r114, 16;
	or.b32  	%r117, %r112, %r115;
	or.b32  	%r118, %r117, %r116;
	or.b32  	%r119, %r118, -16777216;
	mad.lo.s32 	%r120, %r78, %r5, %r1;
	ld.const.u64 	%rd5, [optixLaunchParams];
	cvta.to.global.u64 	%rd6, %rd5;
	mul.wide.u32 	%rd7, %r120, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r119;
	ret;

}


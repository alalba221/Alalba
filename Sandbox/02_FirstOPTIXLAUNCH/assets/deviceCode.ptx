//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30794723
// Cuda compilation tools, release 11.6, V11.6.55
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_52
.address_size 64

	// .globl	__direct_callable__lambertian_sample
.extern .const .align 8 .b8 optixLaunchParams[152];

.visible .func  (.param .align 4 .b8 func_retval0[12]) __direct_callable__lambertian_sample(
	.param .b64 __direct_callable__lambertian_sample_param_0,
	.param .b64 __direct_callable__lambertian_sample_param_1,
	.param .b64 __direct_callable__lambertian_sample_param_2,
	.param .b64 __direct_callable__lambertian_sample_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<55>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [__direct_callable__lambertian_sample_param_0];
	ld.param.u64 	%rd2, [__direct_callable__lambertian_sample_param_1];
	ld.u32 	%r1, [%rd1+72];
	mad.lo.s32 	%r2, %r1, 1664525, 1013904223;
	and.b32  	%r3, %r2, 16777215;
	cvt.rn.f32.u32 	%f1, %r3;
	mov.f32 	%f2, 0f4B800000;
	div.approx.ftz.f32 	%f3, %f1, %f2;
	mad.lo.s32 	%r4, %r2, 1664525, 1013904223;
	st.u32 	[%rd1+72], %r4;
	and.b32  	%r5, %r4, 16777215;
	cvt.rn.f32.u32 	%f4, %r5;
	div.approx.ftz.f32 	%f5, %f4, %f2;
	mul.ftz.f32 	%f6, %f5, 0f40C90FDC;
	sqrt.approx.ftz.f32 	%f7, %f3;
	cos.approx.ftz.f32 	%f8, %f6;
	mul.ftz.f32 	%f9, %f7, %f8;
	sin.approx.ftz.f32 	%f10, %f6;
	mul.ftz.f32 	%f11, %f7, %f10;
	mul.ftz.f32 	%f12, %f9, %f9;
	mov.f32 	%f13, 0f3F800000;
	sub.ftz.f32 	%f14, %f13, %f12;
	mul.ftz.f32 	%f15, %f11, %f11;
	sub.ftz.f32 	%f16, %f14, %f15;
	mov.f32 	%f17, 0f00000000;
	max.ftz.f32 	%f18, %f17, %f16;
	sqrt.approx.ftz.f32 	%f19, %f18;
	ld.f32 	%f20, [%rd2];
	ld.f32 	%f21, [%rd2+4];
	ld.f32 	%f22, [%rd2+8];
	abs.ftz.f32 	%f23, %f20;
	abs.ftz.f32 	%f24, %f22;
	setp.gt.ftz.f32 	%p1, %f23, %f24;
	neg.ftz.f32 	%f25, %f21;
	neg.ftz.f32 	%f26, %f22;
	selp.f32 	%f27, %f25, 0f00000000, %p1;
	selp.f32 	%f28, %f20, %f26, %p1;
	selp.f32 	%f29, 0f00000000, %f21, %p1;
	mul.ftz.f32 	%f30, %f28, %f28;
	fma.rn.ftz.f32 	%f31, %f27, %f27, %f30;
	fma.rn.ftz.f32 	%f32, %f29, %f29, %f31;
	sqrt.approx.ftz.f32 	%f33, %f32;
	div.approx.ftz.f32 	%f34, %f27, %f33;
	div.approx.ftz.f32 	%f35, %f28, %f33;
	div.approx.ftz.f32 	%f36, %f29, %f33;
	mul.ftz.f32 	%f37, %f22, %f35;
	mul.ftz.f32 	%f38, %f21, %f36;
	sub.ftz.f32 	%f39, %f37, %f38;
	mul.ftz.f32 	%f40, %f20, %f36;
	mul.ftz.f32 	%f41, %f22, %f34;
	sub.ftz.f32 	%f42, %f40, %f41;
	mul.ftz.f32 	%f43, %f21, %f34;
	mul.ftz.f32 	%f44, %f20, %f35;
	sub.ftz.f32 	%f45, %f43, %f44;
	mul.ftz.f32 	%f46, %f9, %f39;
	mul.ftz.f32 	%f47, %f9, %f42;
	mul.ftz.f32 	%f48, %f9, %f45;
	fma.rn.ftz.f32 	%f49, %f11, %f34, %f46;
	fma.rn.ftz.f32 	%f50, %f11, %f35, %f47;
	fma.rn.ftz.f32 	%f51, %f11, %f36, %f48;
	fma.rn.ftz.f32 	%f52, %f19, %f20, %f49;
	fma.rn.ftz.f32 	%f53, %f19, %f21, %f50;
	fma.rn.ftz.f32 	%f54, %f19, %f22, %f51;
	mov.b32 	%r6, %f54;
	mov.b32 	%r7, %f53;
	mov.b32 	%r8, %f52;
	st.param.b32 	[func_retval0+0], %r8;
	st.param.b32 	[func_retval0+4], %r7;
	st.param.b32 	[func_retval0+8], %r6;
	ret;

}
	// .globl	__direct_callable__lambertian_pdf
.visible .func  (.param .b32 func_retval0) __direct_callable__lambertian_pdf(
	.param .b64 __direct_callable__lambertian_pdf_param_0,
	.param .b64 __direct_callable__lambertian_pdf_param_1,
	.param .b64 __direct_callable__lambertian_pdf_param_2,
	.param .b64 __direct_callable__lambertian_pdf_param_3,
	.param .b64 __direct_callable__lambertian_pdf_param_4
)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f3E22F982;
	st.param.f32 	[func_retval0+0], %f1;
	ret;

}
	// .globl	__direct_callable__lambertian_eval
.visible .func  (.param .align 4 .b8 func_retval0[12]) __direct_callable__lambertian_eval(
	.param .b64 __direct_callable__lambertian_eval_param_0,
	.param .b64 __direct_callable__lambertian_eval_param_1,
	.param .b64 __direct_callable__lambertian_eval_param_2,
	.param .b64 __direct_callable__lambertian_eval_param_3,
	.param .b64 __direct_callable__lambertian_eval_param_4
)
{
	.reg .f32 	%f<8>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [__direct_callable__lambertian_eval_param_3];
	ld.f32 	%f1, [%rd1+16];
	mov.f32 	%f2, 0f40490FDC;
	div.approx.ftz.f32 	%f3, %f1, %f2;
	ld.f32 	%f4, [%rd1+20];
	div.approx.ftz.f32 	%f5, %f4, %f2;
	ld.f32 	%f6, [%rd1+24];
	div.approx.ftz.f32 	%f7, %f6, %f2;
	mov.b32 	%r1, %f7;
	mov.b32 	%r2, %f5;
	mov.b32 	%r3, %f3;
	st.param.b32 	[func_retval0+0], %r3;
	st.param.b32 	[func_retval0+4], %r2;
	st.param.b32 	[func_retval0+8], %r1;
	ret;

}
	// .globl	__direct_callable__microfacet_sample
.visible .func  (.param .align 4 .b8 func_retval0[12]) __direct_callable__microfacet_sample(
	.param .b64 __direct_callable__microfacet_sample_param_0,
	.param .b64 __direct_callable__microfacet_sample_param_1,
	.param .b64 __direct_callable__microfacet_sample_param_2,
	.param .b64 __direct_callable__microfacet_sample_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<81>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [__direct_callable__microfacet_sample_param_0];
	ld.param.u64 	%rd2, [__direct_callable__microfacet_sample_param_1];
	ld.param.u64 	%rd3, [__direct_callable__microfacet_sample_param_2];
	ld.param.u64 	%rd4, [__direct_callable__microfacet_sample_param_3];
	ld.f32 	%f1, [%rd3+52];
	mul.ftz.f32 	%f2, %f1, %f1;
	ld.u32 	%r1, [%rd1+72];
	mad.lo.s32 	%r2, %r1, 1664525, 1013904223;
	and.b32  	%r3, %r2, 16777215;
	cvt.rn.f32.u32 	%f3, %r3;
	mov.f32 	%f4, 0f4B800000;
	div.approx.ftz.f32 	%f5, %f3, %f4;
	mad.lo.s32 	%r4, %r2, 1664525, 1013904223;
	st.u32 	[%rd1+72], %r4;
	and.b32  	%r5, %r4, 16777215;
	cvt.rn.f32.u32 	%f6, %r5;
	div.approx.ftz.f32 	%f7, %f6, %f4;
	mov.f32 	%f8, 0f3F800000;
	sub.ftz.f32 	%f9, %f8, %f5;
	fma.rn.ftz.f32 	%f10, %f2, %f2, 0fBF800000;
	fma.rn.ftz.f32 	%f11, %f5, %f10, 0f3F800000;
	div.approx.ftz.f32 	%f12, %f9, %f11;
	sqrt.approx.ftz.f32 	%f13, %f12;
	sub.ftz.f32 	%f14, %f8, %f12;
	sqrt.approx.ftz.f32 	%f15, %f14;
	mul.ftz.f32 	%f16, %f7, 0f40C90FDC;
	cos.approx.ftz.f32 	%f17, %f16;
	mul.ftz.f32 	%f18, %f15, %f17;
	sin.approx.ftz.f32 	%f19, %f16;
	mul.ftz.f32 	%f20, %f15, %f19;
	mul.ftz.f32 	%f21, %f20, %f20;
	fma.rn.ftz.f32 	%f22, %f18, %f18, %f21;
	fma.rn.ftz.f32 	%f23, %f13, %f13, %f22;
	sqrt.approx.ftz.f32 	%f24, %f23;
	div.approx.ftz.f32 	%f25, %f18, %f24;
	div.approx.ftz.f32 	%f26, %f20, %f24;
	div.approx.ftz.f32 	%f27, %f13, %f24;
	ld.f32 	%f28, [%rd2];
	ld.f32 	%f29, [%rd2+4];
	ld.f32 	%f30, [%rd2+8];
	abs.ftz.f32 	%f31, %f28;
	abs.ftz.f32 	%f32, %f30;
	setp.gt.ftz.f32 	%p1, %f31, %f32;
	neg.ftz.f32 	%f33, %f29;
	neg.ftz.f32 	%f34, %f30;
	selp.f32 	%f35, %f33, 0f00000000, %p1;
	selp.f32 	%f36, %f28, %f34, %p1;
	selp.f32 	%f37, 0f00000000, %f29, %p1;
	mul.ftz.f32 	%f38, %f36, %f36;
	fma.rn.ftz.f32 	%f39, %f35, %f35, %f38;
	fma.rn.ftz.f32 	%f40, %f37, %f37, %f39;
	sqrt.approx.ftz.f32 	%f41, %f40;
	div.approx.ftz.f32 	%f42, %f35, %f41;
	div.approx.ftz.f32 	%f43, %f36, %f41;
	div.approx.ftz.f32 	%f44, %f37, %f41;
	mul.ftz.f32 	%f45, %f30, %f43;
	mul.ftz.f32 	%f46, %f29, %f44;
	sub.ftz.f32 	%f47, %f45, %f46;
	mul.ftz.f32 	%f48, %f28, %f44;
	mul.ftz.f32 	%f49, %f30, %f42;
	sub.ftz.f32 	%f50, %f48, %f49;
	mul.ftz.f32 	%f51, %f29, %f42;
	mul.ftz.f32 	%f52, %f28, %f43;
	sub.ftz.f32 	%f53, %f51, %f52;
	mul.ftz.f32 	%f54, %f25, %f47;
	mul.ftz.f32 	%f55, %f25, %f50;
	mul.ftz.f32 	%f56, %f25, %f53;
	fma.rn.ftz.f32 	%f57, %f26, %f42, %f54;
	fma.rn.ftz.f32 	%f58, %f26, %f43, %f55;
	fma.rn.ftz.f32 	%f59, %f26, %f44, %f56;
	fma.rn.ftz.f32 	%f60, %f27, %f28, %f57;
	fma.rn.ftz.f32 	%f61, %f27, %f29, %f58;
	fma.rn.ftz.f32 	%f62, %f27, %f30, %f59;
	ld.f32 	%f63, [%rd4];
	neg.ftz.f32 	%f64, %f63;
	ld.f32 	%f65, [%rd4+4];
	neg.ftz.f32 	%f66, %f65;
	ld.f32 	%f67, [%rd4+8];
	neg.ftz.f32 	%f68, %f67;
	mul.ftz.f32 	%f69, %f60, %f64;
	mul.ftz.f32 	%f70, %f61, %f65;
	sub.ftz.f32 	%f71, %f69, %f70;
	mul.ftz.f32 	%f72, %f62, %f67;
	sub.ftz.f32 	%f73, %f71, %f72;
	add.ftz.f32 	%f74, %f73, %f73;
	mul.ftz.f32 	%f75, %f60, %f74;
	mul.ftz.f32 	%f76, %f61, %f74;
	mul.ftz.f32 	%f77, %f62, %f74;
	sub.ftz.f32 	%f78, %f64, %f75;
	sub.ftz.f32 	%f79, %f66, %f76;
	sub.ftz.f32 	%f80, %f68, %f77;
	mov.b32 	%r6, %f80;
	mov.b32 	%r7, %f79;
	mov.b32 	%r8, %f78;
	st.param.b32 	[func_retval0+0], %r8;
	st.param.b32 	[func_retval0+4], %r7;
	st.param.b32 	[func_retval0+8], %r6;
	ret;

}
	// .globl	__direct_callable__microfacet_pdf
.visible .func  (.param .align 4 .b8 func_retval0[12]) __direct_callable__microfacet_pdf(
	.param .b64 __direct_callable__microfacet_pdf_param_0,
	.param .b64 __direct_callable__microfacet_pdf_param_1,
	.param .b64 __direct_callable__microfacet_pdf_param_2,
	.param .b64 __direct_callable__microfacet_pdf_param_3,
	.param .b64 __direct_callable__microfacet_pdf_param_4
)
{
	.reg .f32 	%f<39>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [__direct_callable__microfacet_pdf_param_1];
	ld.param.u64 	%rd2, [__direct_callable__microfacet_pdf_param_2];
	ld.param.u64 	%rd3, [__direct_callable__microfacet_pdf_param_3];
	ld.param.u64 	%rd4, [__direct_callable__microfacet_pdf_param_4];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	ld.f32 	%f4, [%rd4];
	ld.f32 	%f5, [%rd1];
	add.ftz.f32 	%f6, %f4, %f5;
	ld.f32 	%f7, [%rd4+4];
	ld.f32 	%f8, [%rd1+4];
	add.ftz.f32 	%f9, %f7, %f8;
	ld.f32 	%f10, [%rd4+8];
	ld.f32 	%f11, [%rd1+8];
	add.ftz.f32 	%f12, %f10, %f11;
	mul.ftz.f32 	%f13, %f9, %f9;
	fma.rn.ftz.f32 	%f14, %f6, %f6, %f13;
	fma.rn.ftz.f32 	%f15, %f12, %f12, %f14;
	sqrt.approx.ftz.f32 	%f16, %f15;
	div.approx.ftz.f32 	%f17, %f6, %f16;
	div.approx.ftz.f32 	%f18, %f9, %f16;
	div.approx.ftz.f32 	%f19, %f12, %f16;
	ld.f32 	%f20, [%rd3+52];
	mul.ftz.f32 	%f21, %f20, %f20;
	mul.ftz.f32 	%f22, %f2, %f18;
	fma.rn.ftz.f32 	%f23, %f1, %f17, %f22;
	fma.rn.ftz.f32 	%f24, %f3, %f19, %f23;
	mov.f32 	%f25, 0f00000000;
	max.ftz.f32 	%f26, %f24, %f25;
	mul.ftz.f32 	%f27, %f26, %f26;
	add.ftz.f32 	%f28, %f21, 0fBF800000;
	fma.rn.ftz.f32 	%f29, %f27, %f28, 0f3F800000;
	mul.ftz.f32 	%f30, %f29, %f29;
	mul.ftz.f32 	%f31, %f30, 0f40490FDC;
	div.approx.ftz.f32 	%f32, %f21, %f31;
	mul.ftz.f32 	%f33, %f24, %f32;
	mul.ftz.f32 	%f34, %f18, %f7;
	fma.rn.ftz.f32 	%f35, %f17, %f4, %f34;
	fma.rn.ftz.f32 	%f36, %f19, %f10, %f35;
	mul.ftz.f32 	%f37, %f36, 0f40800000;
	div.approx.ftz.f32 	%f38, %f33, %f37;
	mov.b32 	%r1, %f38;
	st.param.b32 	[func_retval0+0], %r1;
	st.param.b32 	[func_retval0+4], %r1;
	st.param.b32 	[func_retval0+8], %r1;
	ret;

}
	// .globl	__direct_callable__microfacet_eval
.visible .func  (.param .align 4 .b8 func_retval0[12]) __direct_callable__microfacet_eval(
	.param .b64 __direct_callable__microfacet_eval_param_0,
	.param .b64 __direct_callable__microfacet_eval_param_1,
	.param .b64 __direct_callable__microfacet_eval_param_2,
	.param .b64 __direct_callable__microfacet_eval_param_3,
	.param .b64 __direct_callable__microfacet_eval_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<104>;
	.reg .b32 	%r<13>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [__direct_callable__microfacet_eval_param_1];
	ld.param.u64 	%rd3, [__direct_callable__microfacet_eval_param_2];
	ld.param.u64 	%rd1, [__direct_callable__microfacet_eval_param_3];
	ld.param.u64 	%rd4, [__direct_callable__microfacet_eval_param_4];
	ld.f32 	%f1, [%rd4];
	ld.f32 	%f2, [%rd2];
	add.ftz.f32 	%f3, %f2, %f1;
	ld.f32 	%f4, [%rd4+4];
	ld.f32 	%f5, [%rd2+4];
	add.ftz.f32 	%f6, %f5, %f4;
	ld.f32 	%f7, [%rd4+8];
	ld.f32 	%f8, [%rd2+8];
	add.ftz.f32 	%f9, %f8, %f7;
	mul.ftz.f32 	%f15, %f6, %f6;
	fma.rn.ftz.f32 	%f16, %f3, %f3, %f15;
	fma.rn.ftz.f32 	%f10, %f9, %f9, %f16;
	ld.f32 	%f11, [%rd3];
	ld.f32 	%f12, [%rd3+4];
	mul.ftz.f32 	%f17, %f12, %f5;
	fma.rn.ftz.f32 	%f18, %f11, %f2, %f17;
	ld.f32 	%f13, [%rd3+8];
	fma.rn.ftz.f32 	%f14, %f13, %f8, %f18;
	setp.leu.ftz.f32 	%p1, %f14, 0f00000000;
	mov.u32 	%r10, 0;
	mov.u32 	%r11, %r10;
	mov.u32 	%r12, %r10;
	@%p1 bra 	$L__BB5_2;

	ld.f32 	%f19, [%rd1+52];
	sqrt.approx.ftz.f32 	%f20, %f10;
	div.approx.ftz.f32 	%f21, %f3, %f20;
	div.approx.ftz.f32 	%f22, %f6, %f20;
	div.approx.ftz.f32 	%f23, %f9, %f20;
	ld.f32 	%f24, [%rd1+56];
	mov.f32 	%f25, 0f3F800000;
	sub.ftz.f32 	%f26, %f25, %f24;
	ld.f32 	%f27, [%rd1+16];
	mul.ftz.f32 	%f28, %f24, %f27;
	ld.f32 	%f29, [%rd1+20];
	mul.ftz.f32 	%f30, %f24, %f29;
	ld.f32 	%f31, [%rd1+24];
	mul.ftz.f32 	%f32, %f24, %f31;
	fma.rn.ftz.f32 	%f33, %f26, 0f3D23D70A, %f28;
	fma.rn.ftz.f32 	%f34, %f26, 0f3D23D70A, %f30;
	fma.rn.ftz.f32 	%f35, %f26, 0f3D23D70A, %f32;
	mul.ftz.f32 	%f36, %f22, %f5;
	fma.rn.ftz.f32 	%f37, %f21, %f2, %f36;
	fma.rn.ftz.f32 	%f38, %f23, %f8, %f37;
	sub.ftz.f32 	%f39, %f25, %f33;
	sub.ftz.f32 	%f40, %f25, %f34;
	sub.ftz.f32 	%f41, %f25, %f35;
	fma.rn.ftz.f32 	%f42, %f38, 0fC0B1C059, 0fC0DF760C;
	mul.ftz.f32 	%f43, %f38, %f42;
	mov.f32 	%f44, 0f40000000;
	lg2.approx.ftz.f32 	%f45, %f44;
	mul.ftz.f32 	%f46, %f45, %f43;
	ex2.approx.ftz.f32 	%f47, %f46;
	fma.rn.ftz.f32 	%f48, %f39, %f47, %f33;
	fma.rn.ftz.f32 	%f49, %f40, %f47, %f34;
	fma.rn.ftz.f32 	%f50, %f41, %f47, %f35;
	mul.ftz.f32 	%f51, %f12, %f22;
	fma.rn.ftz.f32 	%f52, %f11, %f21, %f51;
	fma.rn.ftz.f32 	%f53, %f13, %f23, %f52;
	mov.f32 	%f54, 0f00000000;
	max.ftz.f32 	%f55, %f53, %f54;
	mul.ftz.f32 	%f56, %f55, %f55;
	mul.ftz.f32 	%f57, %f19, %f19;
	add.ftz.f32 	%f58, %f57, 0fBF800000;
	fma.rn.ftz.f32 	%f59, %f58, %f56, 0f3F800000;
	mul.ftz.f32 	%f60, %f59, %f59;
	mul.ftz.f32 	%f61, %f60, 0f40490FDC;
	mov.f32 	%f62, 0f40490FDC;
	div.approx.ftz.f32 	%f63, %f57, %f61;
	add.ftz.f32 	%f64, %f19, 0f3F800000;
	mul.ftz.f32 	%f65, %f64, %f64;
	mov.f32 	%f66, 0f41000000;
	div.approx.ftz.f32 	%f67, %f65, %f66;
	mul.ftz.f32 	%f68, %f12, %f4;
	fma.rn.ftz.f32 	%f69, %f11, %f1, %f68;
	fma.rn.ftz.f32 	%f70, %f13, %f7, %f69;
	max.ftz.f32 	%f71, %f70, %f54;
	cvt.ftz.f64.f32 	%fd1, %f71;
	cvt.ftz.f64.f32 	%fd2, %f67;
	mov.f64 	%fd3, 0d3FF0000000000000;
	sub.f64 	%fd4, %fd3, %fd2;
	fma.rn.f64 	%fd5, %fd4, %fd1, %fd2;
	cvt.rn.ftz.f32.f64 	%f72, %fd5;
	div.approx.ftz.f32 	%f73, %f71, %f72;
	max.ftz.f32 	%f74, %f14, %f54;
	cvt.ftz.f64.f32 	%fd6, %f74;
	fma.rn.f64 	%fd7, %fd4, %fd6, %fd2;
	cvt.rn.ftz.f32.f64 	%f75, %fd7;
	div.approx.ftz.f32 	%f76, %f74, %f75;
	mul.ftz.f32 	%f77, %f73, %f76;
	mul.ftz.f32 	%f78, %f48, %f77;
	mul.ftz.f32 	%f79, %f49, %f77;
	mul.ftz.f32 	%f80, %f50, %f77;
	mul.ftz.f32 	%f81, %f63, %f78;
	mul.ftz.f32 	%f82, %f63, %f79;
	mul.ftz.f32 	%f83, %f63, %f80;
	mul.ftz.f32 	%f84, %f70, 0f40800000;
	mul.ftz.f32 	%f85, %f84, %f14;
	div.approx.ftz.f32 	%f86, %f81, %f85;
	div.approx.ftz.f32 	%f87, %f82, %f85;
	div.approx.ftz.f32 	%f88, %f83, %f85;
	ld.f32 	%f89, [%rd1+40];
	sub.ftz.f32 	%f90, %f25, %f89;
	ld.f32 	%f91, [%rd1+44];
	sub.ftz.f32 	%f92, %f25, %f91;
	ld.f32 	%f93, [%rd1+48];
	sub.ftz.f32 	%f94, %f25, %f93;
	mul.ftz.f32 	%f95, %f89, %f27;
	mul.ftz.f32 	%f96, %f91, %f29;
	mul.ftz.f32 	%f97, %f93, %f31;
	div.approx.ftz.f32 	%f98, %f95, %f62;
	div.approx.ftz.f32 	%f99, %f96, %f62;
	div.approx.ftz.f32 	%f100, %f97, %f62;
	fma.rn.ftz.f32 	%f101, %f86, %f90, %f98;
	fma.rn.ftz.f32 	%f102, %f87, %f92, %f99;
	fma.rn.ftz.f32 	%f103, %f88, %f94, %f100;
	mov.b32 	%r12, %f103;
	mov.b32 	%r11, %f102;
	mov.b32 	%r10, %f101;

$L__BB5_2:
	st.param.b32 	[func_retval0+0], %r10;
	st.param.b32 	[func_retval0+4], %r11;
	st.param.b32 	[func_retval0+8], %r12;
	ret;

}
	// .globl	__direct_callable__metal_sample
.visible .func  (.param .align 4 .b8 func_retval0[12]) __direct_callable__metal_sample(
	.param .b64 __direct_callable__metal_sample_param_0,
	.param .b64 __direct_callable__metal_sample_param_1,
	.param .b64 __direct_callable__metal_sample_param_2,
	.param .b64 __direct_callable__metal_sample_param_3
)
{
	.reg .f32 	%f<17>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [__direct_callable__metal_sample_param_1];
	ld.param.u64 	%rd2, [__direct_callable__metal_sample_param_3];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd1];
	ld.f32 	%f3, [%rd2+4];
	ld.f32 	%f4, [%rd1+4];
	mul.ftz.f32 	%f5, %f3, %f4;
	fma.rn.ftz.f32 	%f6, %f1, %f2, %f5;
	ld.f32 	%f7, [%rd2+8];
	ld.f32 	%f8, [%rd1+8];
	fma.rn.ftz.f32 	%f9, %f7, %f8, %f6;
	add.ftz.f32 	%f10, %f9, %f9;
	mul.ftz.f32 	%f11, %f2, %f10;
	mul.ftz.f32 	%f12, %f4, %f10;
	mul.ftz.f32 	%f13, %f10, %f8;
	sub.ftz.f32 	%f14, %f1, %f11;
	sub.ftz.f32 	%f15, %f3, %f12;
	sub.ftz.f32 	%f16, %f7, %f13;
	mov.b32 	%r1, %f16;
	mov.b32 	%r2, %f15;
	mov.b32 	%r3, %f14;
	st.param.b32 	[func_retval0+0], %r3;
	st.param.b32 	[func_retval0+4], %r2;
	st.param.b32 	[func_retval0+8], %r1;
	ret;

}
	// .globl	__direct_callable__metal_pdf
.visible .func  (.param .b32 func_retval0) __direct_callable__metal_pdf(
	.param .b64 __direct_callable__metal_pdf_param_0,
	.param .b64 __direct_callable__metal_pdf_param_1,
	.param .b64 __direct_callable__metal_pdf_param_2,
	.param .b64 __direct_callable__metal_pdf_param_3,
	.param .b64 __direct_callable__metal_pdf_param_4
)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f3F800000;
	st.param.f32 	[func_retval0+0], %f1;
	ret;

}
	// .globl	__direct_callable__metal_eval
.visible .func  (.param .align 4 .b8 func_retval0[12]) __direct_callable__metal_eval(
	.param .b64 __direct_callable__metal_eval_param_0,
	.param .b64 __direct_callable__metal_eval_param_1,
	.param .b64 __direct_callable__metal_eval_param_2,
	.param .b64 __direct_callable__metal_eval_param_3,
	.param .b64 __direct_callable__metal_eval_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 1065353216;
	st.param.b32 	[func_retval0+0], %r1;
	st.param.b32 	[func_retval0+4], %r1;
	st.param.b32 	[func_retval0+8], %r1;
	ret;

}
	// .globl	__closesthit__occlusion
.visible .entry __closesthit__occlusion()
{
	.reg .b32 	%r<3>;


	mov.u32 	%r1, 0;
	mov.u32 	%r2, 1;
	// begin inline asm
	call _optix_set_payload, (%r1, %r2);
	// end inline asm
	ret;

}
	// .globl	__closesthit__radiance
.visible .entry __closesthit__radiance()
{
	.local .align 4 .b8 	__local_depot10[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .f32 	%f<218>;
	.reg .b32 	%r<132>;
	.reg .b64 	%rd<28>;


	mov.u64 	%SPL, __local_depot10;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd6, %SPL, 0;
	add.u64 	%rd7, %SP, 12;
	add.u64 	%rd2, %SPL, 12;
	// begin inline asm
	call (%rd4), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// end inline asm
	ld.u64 	%rd8, [%rd4+8];
	mul.wide.s32 	%rd9, %r3, 12;
	add.s64 	%rd10, %rd8, %rd9;
	ld.u32 	%r8, [%rd10];
	ld.u64 	%rd11, [%rd4];
	mul.wide.s32 	%rd12, %r8, 12;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u32 	%r9, [%rd10+4];
	mul.wide.s32 	%rd14, %r9, 12;
	add.s64 	%rd15, %rd11, %rd14;
	ld.u32 	%r10, [%rd10+8];
	mul.wide.s32 	%rd16, %r10, 12;
	add.s64 	%rd17, %rd11, %rd16;
	ld.f32 	%f36, [%rd13];
	ld.f32 	%f37, [%rd15];
	sub.ftz.f32 	%f38, %f37, %f36;
	ld.f32 	%f39, [%rd13+4];
	ld.f32 	%f40, [%rd15+4];
	sub.ftz.f32 	%f41, %f40, %f39;
	ld.f32 	%f42, [%rd13+8];
	ld.f32 	%f43, [%rd15+8];
	sub.ftz.f32 	%f44, %f43, %f42;
	ld.f32 	%f45, [%rd17];
	sub.ftz.f32 	%f46, %f45, %f36;
	ld.f32 	%f47, [%rd17+4];
	sub.ftz.f32 	%f48, %f47, %f39;
	ld.f32 	%f49, [%rd17+8];
	sub.ftz.f32 	%f50, %f49, %f42;
	mul.ftz.f32 	%f51, %f41, %f50;
	mul.ftz.f32 	%f52, %f44, %f48;
	sub.ftz.f32 	%f53, %f51, %f52;
	mul.ftz.f32 	%f54, %f44, %f46;
	mul.ftz.f32 	%f55, %f38, %f50;
	sub.ftz.f32 	%f56, %f54, %f55;
	mul.ftz.f32 	%f57, %f38, %f48;
	mul.ftz.f32 	%f58, %f41, %f46;
	sub.ftz.f32 	%f59, %f57, %f58;
	mul.ftz.f32 	%f60, %f56, %f56;
	fma.rn.ftz.f32 	%f61, %f53, %f53, %f60;
	fma.rn.ftz.f32 	%f62, %f59, %f59, %f61;
	sqrt.approx.ftz.f32 	%f63, %f62;
	div.approx.ftz.f32 	%f64, %f53, %f63;
	div.approx.ftz.f32 	%f65, %f56, %f63;
	div.approx.ftz.f32 	%f66, %f59, %f63;
	// begin inline asm
	call (%f29), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f30), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f31), _optix_get_world_ray_direction_z, ();
	// end inline asm
	mul.ftz.f32 	%f67, %f30, %f30;
	fma.rn.ftz.f32 	%f68, %f29, %f29, %f67;
	fma.rn.ftz.f32 	%f69, %f31, %f31, %f68;
	sqrt.approx.ftz.f32 	%f70, %f69;
	div.approx.ftz.f32 	%f71, %f29, %f70;
	div.approx.ftz.f32 	%f72, %f30, %f70;
	div.approx.ftz.f32 	%f73, %f31, %f70;
	neg.ftz.f32 	%f74, %f71;
	neg.ftz.f32 	%f75, %f72;
	neg.ftz.f32 	%f76, %f73;
	st.local.f32 	[%rd6], %f74;
	st.local.f32 	[%rd6+4], %f75;
	st.local.f32 	[%rd6+8], %f76;
	// begin inline asm
	call (%f32), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f33), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f34), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f35), _optix_get_ray_tmax, ();
	// end inline asm
	fma.rn.ftz.f32 	%f1, %f71, %f35, %f32;
	fma.rn.ftz.f32 	%f2, %f72, %f35, %f33;
	fma.rn.ftz.f32 	%f3, %f73, %f35, %f34;
	mul.ftz.f32 	%f77, %f64, %f74;
	mul.ftz.f32 	%f78, %f65, %f72;
	sub.ftz.f32 	%f79, %f77, %f78;
	mul.ftz.f32 	%f80, %f66, %f73;
	sub.ftz.f32 	%f81, %f79, %f80;
	setp.lt.ftz.f32 	%p1, %f81, 0f00000000;
	neg.ftz.f32 	%f82, %f64;
	neg.ftz.f32 	%f83, %f65;
	neg.ftz.f32 	%f84, %f66;
	selp.f32 	%f85, %f84, %f66, %p1;
	selp.f32 	%f86, %f83, %f65, %p1;
	selp.f32 	%f87, %f82, %f64, %p1;
	st.local.f32 	[%rd2], %f87;
	st.local.f32 	[%rd2+4], %f86;
	st.local.f32 	[%rd2+8], %f85;
	mov.u32 	%r5, 0;
	// begin inline asm
	call (%r4), _optix_get_payload, (%r5);
	// end inline asm
	mov.u32 	%r7, 1;
	// begin inline asm
	call (%r6), _optix_get_payload, (%r7);
	// end inline asm
	cvt.u64.u32 	%rd18, %r4;
	cvt.u64.u32 	%rd19, %r6;
	bfi.b64 	%rd3, %rd18, %rd19, 32, 32;
	ld.u32 	%r11, [%rd3+60];
	setp.eq.s32 	%p2, %r11, 0;
	@%p2 bra 	$L__BB10_2;

	ld.f32 	%f88, [%rd4+28];
	st.f32 	[%rd3], %f88;
	ld.f32 	%f89, [%rd4+32];
	st.f32 	[%rd3+4], %f89;
	ld.f32 	%f214, [%rd4+36];
	bra.uni 	$L__BB10_3;

$L__BB10_2:
	mov.f32 	%f214, 0f00000000;
	st.u32 	[%rd3], %r5;
	st.u32 	[%rd3+4], %r5;

$L__BB10_3:
	st.f32 	[%rd3+8], %f214;
	st.u32 	[%rd3+60], %r5;
	ld.u32 	%r13, [%rd4+64];
	// begin inline asm
	call (%rd20), _optix_call_direct_callable,(%r13);
	// end inline asm
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd4;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd5;
	.param .align 4 .b8 retval0[12];
	prototype_0 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b64 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rd20, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_0;
	ld.param.b32 	%r17, [retval0+0];
	ld.param.b32 	%r18, [retval0+4];
	ld.param.b32 	%r19, [retval0+8];
	} // callseq 0
	add.u64 	%rd25, %SP, 24;
	add.u64 	%rd26, %SPL, 24;
	st.local.u32 	[%rd26], %r17;
	st.local.u32 	[%rd26+4], %r18;
	st.local.u32 	[%rd26+8], %r19;
	st.f32 	[%rd3+36], %f1;
	st.f32 	[%rd3+40], %f2;
	st.f32 	[%rd3+44], %f3;
	mov.b32 	%f94, %r17;
	mov.b32 	%f95, %r18;
	mov.b32 	%f96, %r19;
	mul.ftz.f32 	%f97, %f95, %f95;
	fma.rn.ftz.f32 	%f98, %f94, %f94, %f97;
	fma.rn.ftz.f32 	%f99, %f96, %f96, %f98;
	sqrt.approx.ftz.f32 	%f100, %f99;
	div.approx.ftz.f32 	%f101, %f94, %f100;
	div.approx.ftz.f32 	%f102, %f95, %f100;
	div.approx.ftz.f32 	%f103, %f96, %f100;
	st.f32 	[%rd3+48], %f101;
	st.f32 	[%rd3+52], %f102;
	st.f32 	[%rd3+56], %f103;
	ld.u32 	%r20, [%rd3+72];
	mad.lo.s32 	%r21, %r20, 1664525, 1013904223;
	and.b32  	%r22, %r21, 16777215;
	cvt.rn.f32.u32 	%f104, %r22;
	mov.f32 	%f105, 0f4B800000;
	div.approx.ftz.f32 	%f106, %f104, %f105;
	mad.lo.s32 	%r23, %r21, 1664525, 1013904223;
	st.u32 	[%rd3+72], %r23;
	and.b32  	%r24, %r23, 16777215;
	cvt.rn.f32.u32 	%f107, %r24;
	div.approx.ftz.f32 	%f108, %f107, %f105;
	ld.const.v2.f32 	{%f109, %f110}, [optixLaunchParams+104];
	ld.const.v2.f32 	{%f111, %f112}, [optixLaunchParams+112];
	ld.const.v2.f32 	{%f113, %f114}, [optixLaunchParams+80];
	ld.const.v2.f32 	{%f115, %f116}, [optixLaunchParams+88];
	ld.const.v2.u32 	{%r25, %r26}, [optixLaunchParams+72];
	ld.const.v2.f32 	{%f119, %f120}, [optixLaunchParams+96];
	fma.rn.ftz.f32 	%f121, %f106, %f119, %f114;
	fma.rn.ftz.f32 	%f122, %f106, %f120, %f115;
	fma.rn.ftz.f32 	%f123, %f106, %f109, %f116;
	fma.rn.ftz.f32 	%f124, %f108, %f110, %f121;
	fma.rn.ftz.f32 	%f125, %f108, %f111, %f122;
	fma.rn.ftz.f32 	%f126, %f108, %f112, %f123;
	sub.ftz.f32 	%f127, %f124, %f1;
	sub.ftz.f32 	%f128, %f125, %f2;
	sub.ftz.f32 	%f129, %f126, %f3;
	mul.ftz.f32 	%f130, %f128, %f128;
	fma.rn.ftz.f32 	%f131, %f127, %f127, %f130;
	fma.rn.ftz.f32 	%f132, %f129, %f129, %f131;
	sqrt.approx.ftz.f32 	%f14, %f132;
	div.approx.ftz.f32 	%f15, %f127, %f14;
	div.approx.ftz.f32 	%f16, %f128, %f14;
	div.approx.ftz.f32 	%f17, %f129, %f14;
	ld.local.f32 	%f133, [%rd2];
	ld.local.f32 	%f134, [%rd2+4];
	mul.ftz.f32 	%f135, %f16, %f134;
	fma.rn.ftz.f32 	%f136, %f15, %f133, %f135;
	ld.local.f32 	%f137, [%rd2+8];
	fma.rn.ftz.f32 	%f18, %f17, %f137, %f136;
	ld.const.v2.f32 	{%f138, %f139}, [optixLaunchParams+120];
	mul.ftz.f32 	%f141, %f15, %f138;
	mul.ftz.f32 	%f143, %f16, %f139;
	neg.ftz.f32 	%f144, %f143;
	sub.ftz.f32 	%f145, %f144, %f141;
	ld.const.f32 	%f146, [optixLaunchParams+128];
	mul.ftz.f32 	%f147, %f17, %f146;
	sub.ftz.f32 	%f19, %f145, %f147;
	ld.u32 	%r14, [%rd4+60];
	// begin inline asm
	call (%rd21), _optix_call_direct_callable,(%r14);
	// end inline asm
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd7;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd4;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd5;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _, .param .b64 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rd21, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	)
	, prototype_1;
	ld.param.f32 	%f148, [retval0+0];
	} // callseq 1
	ld.u32 	%r15, [%rd4+68];
	// begin inline asm
	call (%rd22), _optix_call_direct_callable,(%r15);
	// end inline asm
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd7;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd4;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd5;
	.param .align 4 .b8 retval0[12];
	prototype_2 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b64 _, .param .b64 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rd22, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	)
	, prototype_2;
	ld.param.b32 	%r27, [retval0+0];
	ld.param.b32 	%r28, [retval0+4];
	ld.param.b32 	%r29, [retval0+8];
	} // callseq 2
	ld.local.f32 	%f149, [%rd26];
	ld.local.f32 	%f150, [%rd2];
	ld.local.f32 	%f151, [%rd26+4];
	ld.local.f32 	%f152, [%rd2+4];
	mul.ftz.f32 	%f153, %f152, %f151;
	fma.rn.ftz.f32 	%f154, %f150, %f149, %f153;
	ld.local.f32 	%f155, [%rd26+8];
	ld.local.f32 	%f156, [%rd2+8];
	fma.rn.ftz.f32 	%f157, %f156, %f155, %f154;
	mov.b32 	%f20, %r27;
	mul.ftz.f32 	%f158, %f157, %f20;
	mov.b32 	%f21, %r28;
	mul.ftz.f32 	%f159, %f157, %f21;
	mov.b32 	%f22, %r29;
	mul.ftz.f32 	%f160, %f157, %f22;
	div.approx.ftz.f32 	%f161, %f158, %f148;
	div.approx.ftz.f32 	%f162, %f159, %f148;
	div.approx.ftz.f32 	%f163, %f160, %f148;
	ld.f32 	%f164, [%rd3+24];
	mul.ftz.f32 	%f165, %f161, %f164;
	st.f32 	[%rd3+24], %f165;
	ld.f32 	%f166, [%rd3+28];
	mul.ftz.f32 	%f167, %f162, %f166;
	st.f32 	[%rd3+28], %f167;
	ld.f32 	%f168, [%rd3+32];
	mul.ftz.f32 	%f169, %f163, %f168;
	st.f32 	[%rd3+32], %f169;
	setp.leu.ftz.f32 	%p3, %f18, 0f00000000;
	setp.leu.ftz.f32 	%p4, %f19, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	mov.f32 	%f215, 0f00000000;
	mov.f32 	%f216, 0f00000000;
	mov.f32 	%f217, 0f00000000;
	@%p5 bra 	$L__BB10_6;

	ld.const.u64 	%rd27, [optixLaunchParams+144];
	add.ftz.f32 	%f177, %f14, 0fBC23D70A;
	mov.f32 	%f176, 0f3C23D70A;
	mov.f32 	%f181, 0f00000000;
	mov.u32 	%r64, 4;
	mov.u32 	%r66, 2;
	// begin inline asm
	call(%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38,%r39,%r40,%r41,%r42,%r43,%r44,%r45,%r46,%r47,%r48,%r49,%r50,%r51,%r52,%r53,%r54,%r55,%r56,%r57,%r58,%r59,%r60,%r61),_optix_trace_typed_32,(%r5,%rd27,%f1,%f2,%f3,%f15,%f16,%f17,%f176,%f177,%f181,%r7,%r64,%r7,%r66,%r7,%r7,%r5,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109,%r110,%r111,%r112,%r113,%r114,%r115,%r116,%r117,%r118,%r119,%r120,%r121,%r122,%r123,%r124,%r125,%r126,%r127,%r128,%r129,%r130,%r131);
	// end inline asm
	setp.ne.s32 	%p6, %r30, 0;
	@%p6 bra 	$L__BB10_6;

	mul.ftz.f32 	%f182, %f112, %f120;
	mul.ftz.f32 	%f183, %f111, %f109;
	sub.ftz.f32 	%f184, %f182, %f183;
	mul.ftz.f32 	%f185, %f112, %f119;
	mul.ftz.f32 	%f186, %f110, %f109;
	sub.ftz.f32 	%f187, %f186, %f185;
	mul.ftz.f32 	%f188, %f110, %f120;
	mul.ftz.f32 	%f189, %f111, %f119;
	sub.ftz.f32 	%f190, %f189, %f188;
	mul.ftz.f32 	%f191, %f187, %f187;
	fma.rn.ftz.f32 	%f192, %f184, %f184, %f191;
	fma.rn.ftz.f32 	%f193, %f190, %f190, %f192;
	rsqrt.approx.ftz.f32 	%f194, %f193;
	mul.ftz.f32 	%f195, %f19, %f18;
	mul.ftz.f32 	%f196, %f195, %f20;
	mul.ftz.f32 	%f197, %f195, %f21;
	mul.ftz.f32 	%f198, %f195, %f22;
	mul.ftz.f32 	%f199, %f14, %f14;
	div.approx.ftz.f32 	%f200, %f196, %f199;
	div.approx.ftz.f32 	%f201, %f197, %f199;
	div.approx.ftz.f32 	%f202, %f198, %f199;
	div.approx.ftz.f32 	%f215, %f200, %f194;
	div.approx.ftz.f32 	%f216, %f201, %f194;
	div.approx.ftz.f32 	%f217, %f202, %f194;

$L__BB10_6:
	mov.b32 	%f203, %r25;
	mov.b32 	%f204, %r26;
	ld.f32 	%f205, [%rd3+12];
	fma.rn.ftz.f32 	%f206, %f215, %f203, %f205;
	st.f32 	[%rd3+12], %f206;
	ld.f32 	%f207, [%rd3+16];
	fma.rn.ftz.f32 	%f208, %f216, %f204, %f207;
	st.f32 	[%rd3+16], %f208;
	ld.f32 	%f209, [%rd3+20];
	fma.rn.ftz.f32 	%f210, %f217, %f113, %f209;
	st.f32 	[%rd3+20], %f210;
	ret;

}
	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance()
{



	ret;

}
	// .globl	__anyhit__occlusion
.visible .entry __anyhit__occlusion()
{



	ret;

}
	// .globl	__miss__occlusion
.visible .entry __miss__occlusion()
{



	ret;

}
	// .globl	__miss__radiance
.visible .entry __miss__radiance()
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<5>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	mov.u32 	%r2, 0;
	// begin inline asm
	call (%r1), _optix_get_payload, (%r2);
	// end inline asm
	mov.u32 	%r4, 1;
	// begin inline asm
	call (%r3), _optix_get_payload, (%r4);
	// end inline asm
	cvt.u64.u32 	%rd2, %r1;
	cvt.u64.u32 	%rd3, %r3;
	bfi.b64 	%rd4, %rd2, %rd3, 32, 32;
	ld.f32 	%f1, [%rd1];
	st.f32 	[%rd4+12], %f1;
	ld.f32 	%f2, [%rd1+4];
	st.f32 	[%rd4+16], %f2;
	ld.f32 	%f3, [%rd1+8];
	st.f32 	[%rd4+20], %f3;
	st.u32 	[%rd4+64], %r4;
	ret;

}
	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame()
{
	.local .align 4 .b8 	__local_depot15[76];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .f32 	%f<141>;
	.reg .b32 	%r<290>;
	.reg .b64 	%rd<16>;


	mov.u64 	%SPL, __local_depot15;
	cvta.local.u64 	%SP, %SPL;
	// begin inline asm
	call (%r25), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r29), _optix_get_launch_index_y, ();
	// end inline asm
	ld.const.u32 	%r288, [optixLaunchParams+140];
	ld.const.v2.u32 	{%r33, %r34}, [optixLaunchParams+8];
	mov.u32 	%r284, 0;
	ld.const.u32 	%r6, [optixLaunchParams+16];
	mad.lo.s32 	%r287, %r33, %r6, %r25;
	mad.lo.s32 	%r285, %r34, %r6, %r29;
	mov.u32 	%r283, 387276957;

$L__BB15_1:
	shl.b32 	%r35, %r285, 4;
	add.s32 	%r36, %r35, -1556008596;
	add.s32 	%r37, %r284, -1640531527;
	add.s32 	%r38, %r37, %r285;
	shr.u32 	%r39, %r285, 5;
	add.s32 	%r40, %r39, -939442524;
	xor.b32  	%r41, %r40, %r36;
	xor.b32  	%r42, %r41, %r38;
	add.s32 	%r43, %r42, %r287;
	shl.b32 	%r44, %r43, 4;
	add.s32 	%r45, %r44, -1383041155;
	add.s32 	%r46, %r43, %r37;
	xor.b32  	%r47, %r45, %r46;
	shr.u32 	%r48, %r43, 5;
	add.s32 	%r49, %r48, 2123724318;
	xor.b32  	%r50, %r47, %r49;
	add.s32 	%r51, %r50, %r285;
	shl.b32 	%r52, %r51, 4;
	add.s32 	%r53, %r52, -1556008596;
	add.s32 	%r54, %r284, 1013904242;
	add.s32 	%r55, %r54, %r51;
	shr.u32 	%r56, %r51, 5;
	add.s32 	%r57, %r56, -939442524;
	xor.b32  	%r58, %r57, %r53;
	xor.b32  	%r59, %r58, %r55;
	add.s32 	%r60, %r59, %r43;
	shl.b32 	%r61, %r60, 4;
	add.s32 	%r62, %r61, -1383041155;
	add.s32 	%r63, %r60, %r54;
	xor.b32  	%r64, %r62, %r63;
	shr.u32 	%r65, %r60, 5;
	add.s32 	%r66, %r65, 2123724318;
	xor.b32  	%r67, %r64, %r66;
	add.s32 	%r68, %r67, %r51;
	shl.b32 	%r69, %r68, 4;
	add.s32 	%r70, %r69, -1556008596;
	add.s32 	%r71, %r284, -626627285;
	add.s32 	%r72, %r71, %r68;
	shr.u32 	%r73, %r68, 5;
	add.s32 	%r74, %r73, -939442524;
	xor.b32  	%r75, %r74, %r70;
	xor.b32  	%r76, %r75, %r72;
	add.s32 	%r77, %r76, %r60;
	shl.b32 	%r78, %r77, 4;
	add.s32 	%r79, %r78, -1383041155;
	add.s32 	%r80, %r77, %r71;
	xor.b32  	%r81, %r79, %r80;
	shr.u32 	%r82, %r77, 5;
	add.s32 	%r83, %r82, 2123724318;
	xor.b32  	%r84, %r81, %r83;
	add.s32 	%r85, %r84, %r68;
	shl.b32 	%r86, %r85, 4;
	add.s32 	%r87, %r86, -1556008596;
	add.s32 	%r88, %r284, 2027808484;
	add.s32 	%r89, %r88, %r85;
	shr.u32 	%r90, %r85, 5;
	add.s32 	%r91, %r90, -939442524;
	xor.b32  	%r92, %r91, %r87;
	xor.b32  	%r93, %r92, %r89;
	add.s32 	%r94, %r93, %r77;
	shl.b32 	%r95, %r94, 4;
	add.s32 	%r96, %r95, -1383041155;
	add.s32 	%r97, %r94, %r88;
	xor.b32  	%r98, %r96, %r97;
	shr.u32 	%r99, %r94, 5;
	add.s32 	%r100, %r99, 2123724318;
	xor.b32  	%r101, %r98, %r100;
	add.s32 	%r102, %r101, %r85;
	shl.b32 	%r103, %r102, 4;
	add.s32 	%r104, %r103, -1556008596;
	add.s32 	%r105, %r283, %r102;
	shr.u32 	%r106, %r102, 5;
	add.s32 	%r107, %r106, -939442524;
	xor.b32  	%r108, %r107, %r104;
	xor.b32  	%r109, %r108, %r105;
	add.s32 	%r110, %r109, %r94;
	shl.b32 	%r111, %r110, 4;
	add.s32 	%r112, %r111, -1383041155;
	add.s32 	%r113, %r110, %r283;
	xor.b32  	%r114, %r112, %r113;
	shr.u32 	%r115, %r110, 5;
	add.s32 	%r116, %r115, 2123724318;
	xor.b32  	%r117, %r114, %r116;
	add.s32 	%r118, %r117, %r102;
	shl.b32 	%r119, %r118, 4;
	add.s32 	%r120, %r119, -1556008596;
	add.s32 	%r121, %r283, -1640531527;
	add.s32 	%r122, %r121, %r118;
	shr.u32 	%r123, %r118, 5;
	add.s32 	%r124, %r123, -939442524;
	xor.b32  	%r125, %r124, %r120;
	xor.b32  	%r126, %r125, %r122;
	add.s32 	%r127, %r126, %r110;
	shl.b32 	%r128, %r127, 4;
	add.s32 	%r129, %r128, -1383041155;
	add.s32 	%r130, %r127, %r121;
	xor.b32  	%r131, %r129, %r130;
	shr.u32 	%r132, %r127, 5;
	add.s32 	%r133, %r132, 2123724318;
	xor.b32  	%r134, %r131, %r133;
	add.s32 	%r135, %r134, %r118;
	shl.b32 	%r136, %r135, 4;
	add.s32 	%r137, %r136, -1556008596;
	add.s32 	%r138, %r283, 1013904242;
	add.s32 	%r139, %r138, %r135;
	shr.u32 	%r140, %r135, 5;
	add.s32 	%r141, %r140, -939442524;
	xor.b32  	%r142, %r141, %r137;
	xor.b32  	%r143, %r142, %r139;
	add.s32 	%r144, %r143, %r127;
	shl.b32 	%r145, %r144, 4;
	add.s32 	%r146, %r145, -1383041155;
	add.s32 	%r147, %r144, %r138;
	xor.b32  	%r148, %r146, %r147;
	shr.u32 	%r149, %r144, 5;
	add.s32 	%r150, %r149, 2123724318;
	xor.b32  	%r151, %r148, %r150;
	add.s32 	%r152, %r151, %r135;
	add.s32 	%r284, %r284, -239350328;
	shl.b32 	%r153, %r152, 4;
	add.s32 	%r154, %r153, -1556008596;
	add.s32 	%r155, %r283, -626627285;
	add.s32 	%r156, %r155, %r152;
	shr.u32 	%r157, %r152, 5;
	add.s32 	%r158, %r157, -939442524;
	xor.b32  	%r159, %r158, %r154;
	xor.b32  	%r160, %r159, %r156;
	add.s32 	%r287, %r160, %r144;
	shl.b32 	%r161, %r287, 4;
	add.s32 	%r162, %r161, -1383041155;
	add.s32 	%r163, %r287, %r155;
	xor.b32  	%r164, %r162, %r163;
	shr.u32 	%r165, %r287, 5;
	add.s32 	%r166, %r165, 2123724318;
	xor.b32  	%r167, %r164, %r166;
	add.s32 	%r285, %r167, %r152;
	add.s32 	%r283, %r283, -239350328;
	setp.ne.s32 	%p1, %r283, -570124355;
	@%p1 bra 	$L__BB15_1;

	add.u64 	%rd4, %SP, 0;
	add.u64 	%rd5, %SPL, 0;
	add.s64 	%rd1, %rd5, 72;
	st.local.u32 	[%rd5+72], %r287;
	cvt.rn.f32.s32 	%f1, %r25;
	cvt.rn.f32.s32 	%f2, %r29;
	cvt.rn.f32.s32 	%f3, %r33;
	cvt.rn.f32.s32 	%f4, %r34;
	ld.const.v2.f32 	{%f55, %f56}, [optixLaunchParams+24];
	ld.const.v2.f32 	{%f57, %f58}, [optixLaunchParams+32];
	ld.const.v2.f32 	{%f59, %f60}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f61, %f62}, [optixLaunchParams+56];
	ld.const.v2.f32 	{%f63, %f64}, [optixLaunchParams+40];
	ld.const.v2.f32 	{%f65, %f66}, [optixLaunchParams+64];
	ld.const.u64 	%rd2, [optixLaunchParams+144];
	shr.u64 	%rd6, %rd4, 32;
	cvt.u32.u64 	%r17, %rd6;
	cvt.u32.u64 	%r18, %rd4;
	mov.f32 	%f134, 0f00000000;
	mov.f32 	%f135, %f134;
	mov.f32 	%f136, %f134;
	bra.uni 	$L__BB15_3;

$L__BB15_7:
	ld.local.u32 	%r287, [%rd1];

$L__BB15_3:
	mad.lo.s32 	%r169, %r287, 1664525, 1013904223;
	and.b32  	%r170, %r169, 16777215;
	cvt.rn.f32.u32 	%f67, %r170;
	mov.f32 	%f68, 0f4B800000;
	div.approx.ftz.f32 	%f69, %f67, %f68;
	add.ftz.f32 	%f70, %f69, %f1;
	mad.lo.s32 	%r171, %r169, 1664525, 1013904223;
	st.local.u32 	[%rd1], %r171;
	and.b32  	%r172, %r171, 16777215;
	cvt.rn.f32.u32 	%f71, %r172;
	div.approx.ftz.f32 	%f72, %f71, %f68;
	add.ftz.f32 	%f73, %f72, %f2;
	div.approx.ftz.f32 	%f74, %f70, %f3;
	div.approx.ftz.f32 	%f75, %f73, %f4;
	add.ftz.f32 	%f76, %f74, 0fBF000000;
	fma.rn.ftz.f32 	%f77, %f76, %f59, %f58;
	fma.rn.ftz.f32 	%f78, %f76, %f60, %f63;
	fma.rn.ftz.f32 	%f79, %f76, %f61, %f64;
	add.ftz.f32 	%f80, %f75, 0fBF000000;
	fma.rn.ftz.f32 	%f81, %f80, %f62, %f77;
	fma.rn.ftz.f32 	%f82, %f80, %f65, %f78;
	fma.rn.ftz.f32 	%f83, %f80, %f66, %f79;
	mul.ftz.f32 	%f84, %f82, %f82;
	fma.rn.ftz.f32 	%f85, %f81, %f81, %f84;
	fma.rn.ftz.f32 	%f86, %f83, %f83, %f85;
	sqrt.approx.ftz.f32 	%f87, %f86;
	div.approx.ftz.f32 	%f128, %f81, %f87;
	div.approx.ftz.f32 	%f129, %f82, %f87;
	div.approx.ftz.f32 	%f130, %f83, %f87;
	mov.u32 	%r289, 0;
	st.local.u32 	[%rd1+-72], %r289;
	st.local.u32 	[%rd1+-68], %r289;
	st.local.u32 	[%rd1+-64], %r289;
	st.local.u32 	[%rd1+-60], %r289;
	st.local.u32 	[%rd1+-56], %r289;
	st.local.u32 	[%rd1+-52], %r289;
	mov.u32 	%r173, 1065353216;
	st.local.u32 	[%rd1+-48], %r173;
	st.local.u32 	[%rd1+-44], %r173;
	st.local.u32 	[%rd1+-40], %r173;
	mov.u32 	%r174, 1;
	st.local.u32 	[%rd1+-12], %r174;
	st.local.u32 	[%rd1+-8], %r289;
	mov.f32 	%f131, %f55;
	mov.f32 	%f132, %f56;
	mov.f32 	%f133, %f57;
	bra.uni 	$L__BB15_4;

$L__BB15_5:
	ld.local.f32 	%f131, [%rd1+-36];
	ld.local.f32 	%f132, [%rd1+-32];
	ld.local.f32 	%f133, [%rd1+-28];
	ld.local.f32 	%f128, [%rd1+-24];
	ld.local.f32 	%f129, [%rd1+-20];
	ld.local.f32 	%f130, [%rd1+-16];
	add.s32 	%r289, %r289, 1;

$L__BB15_4:
	mov.u32 	%r279, 1;
	mov.u32 	%r278, 0;
	mov.f32 	%f94, 0f3C23D70A;
	mov.f32 	%f95, 0f5A0E1BCA;
	mov.f32 	%f96, 0f00000000;
	mov.u32 	%r213, 2;
	// begin inline asm
	call(%r175,%r176,%r177,%r178,%r179,%r180,%r181,%r182,%r183,%r184,%r185,%r186,%r187,%r188,%r189,%r190,%r191,%r192,%r193,%r194,%r195,%r196,%r197,%r198,%r199,%r200,%r201,%r202,%r203,%r204,%r205,%r206),_optix_trace_typed_32,(%r278,%rd2,%f131,%f132,%f133,%f128,%f129,%f130,%f94,%f95,%f96,%r279,%r278,%r278,%r213,%r278,%r213,%r17,%r18,%r246,%r247,%r248,%r249,%r250,%r251,%r252,%r253,%r254,%r255,%r256,%r257,%r258,%r259,%r260,%r261,%r262,%r263,%r264,%r265,%r266,%r267,%r268,%r269,%r270,%r271,%r272,%r273,%r274,%r275);
	// end inline asm
	ld.local.f32 	%f97, [%rd1+-72];
	add.ftz.f32 	%f98, %f134, %f97;
	ld.local.f32 	%f99, [%rd1+-68];
	add.ftz.f32 	%f100, %f135, %f99;
	ld.local.f32 	%f101, [%rd1+-64];
	add.ftz.f32 	%f102, %f136, %f101;
	ld.local.f32 	%f103, [%rd1+-48];
	ld.local.f32 	%f104, [%rd1+-60];
	ld.local.f32 	%f105, [%rd1+-44];
	ld.local.f32 	%f106, [%rd1+-56];
	ld.local.f32 	%f107, [%rd1+-40];
	ld.local.f32 	%f108, [%rd1+-52];
	fma.rn.ftz.f32 	%f134, %f104, %f103, %f98;
	fma.rn.ftz.f32 	%f135, %f106, %f105, %f100;
	fma.rn.ftz.f32 	%f136, %f108, %f107, %f102;
	ld.local.u32 	%r276, [%rd1+-8];
	setp.ne.s32 	%p2, %r276, 0;
	setp.gt.u32 	%p3, %r289, 2;
	or.pred  	%p4, %p3, %p2;
	@%p4 bra 	$L__BB15_6;
	bra.uni 	$L__BB15_5;

$L__BB15_6:
	add.s32 	%r288, %r288, -1;
	setp.eq.s32 	%p5, %r288, 0;
	@%p5 bra 	$L__BB15_8;
	bra.uni 	$L__BB15_7;

$L__BB15_8:
	ld.const.u32 	%r281, [optixLaunchParams+16];
	ld.const.u32 	%r280, [optixLaunchParams+140];
	mad.lo.s32 	%r277, %r33, %r29, %r25;
	cvt.rn.f32.u32 	%f110, %r280;
	div.approx.ftz.f32 	%f137, %f134, %f110;
	div.approx.ftz.f32 	%f138, %f135, %f110;
	div.approx.ftz.f32 	%f139, %f136, %f110;
	cvt.u64.u32 	%rd3, %r277;
	setp.lt.s32 	%p6, %r281, 1;
	mov.f32 	%f140, 0f3F800000;
	@%p6 bra 	$L__BB15_10;

	ld.const.u32 	%r282, [optixLaunchParams+16];
	cvt.rn.f32.s32 	%f111, %r282;
	ld.const.u64 	%rd8, [optixLaunchParams];
	cvta.to.global.u64 	%rd9, %rd8;
	shl.b64 	%rd10, %rd3, 4;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.v4.f32 	{%f112, %f113, %f114, %f115}, [%rd11];
	fma.rn.ftz.f32 	%f120, %f112, %f111, %f137;
	fma.rn.ftz.f32 	%f121, %f113, %f111, %f138;
	fma.rn.ftz.f32 	%f122, %f114, %f111, %f139;
	fma.rn.ftz.f32 	%f123, %f115, %f111, 0f3F800000;
	add.ftz.f32 	%f124, %f111, 0f3F800000;
	div.approx.ftz.f32 	%f137, %f120, %f124;
	div.approx.ftz.f32 	%f138, %f121, %f124;
	div.approx.ftz.f32 	%f139, %f122, %f124;
	div.approx.ftz.f32 	%f140, %f123, %f124;

$L__BB15_10:
	ld.const.u64 	%rd12, [optixLaunchParams];
	cvta.to.global.u64 	%rd13, %rd12;
	shl.b64 	%rd14, %rd3, 4;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.v4.f32 	[%rd15], {%f137, %f138, %f139, %f140};
	ret;

}

